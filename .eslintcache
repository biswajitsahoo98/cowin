[{"C:\\Users\\ASUS\\Documents\\cowin\\cowin\\src\\index.js":"1","C:\\Users\\ASUS\\Documents\\cowin\\cowin\\src\\reportWebVitals.js":"2","C:\\Users\\ASUS\\Documents\\cowin\\cowin\\src\\App.js":"3","C:\\Users\\ASUS\\Documents\\cowin\\cowin\\src\\component\\footer.jsx":"4","C:\\Users\\ASUS\\Documents\\cowin\\cowin\\src\\component\\header.jsx":"5","C:\\Users\\ASUS\\Documents\\cowin\\cowin\\src\\component\\login.jsx":"6","C:\\Users\\ASUS\\Documents\\cowin\\cowin\\src\\component\\registation.jsx":"7","C:\\Users\\ASUS\\Documents\\cowin\\cowin\\src\\component\\home.jsx":"8","C:\\Users\\ASUS\\Documents\\cowin\\cowin\\src\\component\\Home.jsx":"9","C:\\Users\\ASUS\\Documents\\cowin\\cowin\\src\\component\\Registation.jsx":"10","C:\\Users\\ASUS\\Documents\\cowin\\cowin\\src\\component\\Tab.jsx":"11","C:\\Users\\ASUS\\Documents\\cowin\\cowin\\src\\layout\\layout.jsx":"12","C:\\Users\\ASUS\\Documents\\cowin\\cowin\\src\\component\\PatientSearch.jsx":"13"},{"size":500,"mtime":499162500000,"results":"14","hashOfConfig":"15"},{"size":362,"mtime":499162500000,"results":"16","hashOfConfig":"15"},{"size":613,"mtime":1612706582180,"results":"17","hashOfConfig":"15"},{"size":1802,"mtime":1612190456921,"results":"18","hashOfConfig":"15"},{"size":1041,"mtime":1612706672081,"results":"19","hashOfConfig":"15"},{"size":8220,"mtime":1612119700789,"results":"20","hashOfConfig":"15"},{"size":20372,"mtime":1612195467555,"results":"21","hashOfConfig":"15"},{"size":3383,"mtime":1612188893426,"results":"22","hashOfConfig":"15"},{"size":9406,"mtime":1612706545700,"results":"23","hashOfConfig":"15"},{"size":24869,"mtime":1612712218462,"results":"24","hashOfConfig":"15"},{"size":929,"mtime":1612698792087,"results":"25","hashOfConfig":"15"},{"size":726,"mtime":1612617673248,"results":"26","hashOfConfig":"15"},{"size":3483,"mtime":1612708267840,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"1o3ug9a",{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"30"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"30"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"30"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"48","messages":"49","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"30"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"30"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"61"},"C:\\Users\\ASUS\\Documents\\cowin\\cowin\\src\\index.js",[],["62","63"],"C:\\Users\\ASUS\\Documents\\cowin\\cowin\\src\\reportWebVitals.js",[],"C:\\Users\\ASUS\\Documents\\cowin\\cowin\\src\\App.js",["64","65"],"import './App.css';\nimport { Route, BrowserRouter, Switch } from 'react-router-dom';\nimport 'antd/dist/antd.css';\nimport { Tab } from './component/Tab';\nimport { Login } from './component/login';\nimport Layout from 'antd/lib/layout/layout';\nimport { LayoutTab } from './layout/layout';\n\nfunction App() {\n\n  return (\n    <div className=\"App\">\n      <BrowserRouter>\n        <Switch>\n           <Route path=\"/login\">\n            <Login />\n          </Route>\n\n            <Route path=\"/\">\n              <LayoutTab />\n            </Route>\n\n        </Switch>\n    </BrowserRouter>\n    </div>\n  );\n}\n\nexport default App;\n","C:\\Users\\ASUS\\Documents\\cowin\\cowin\\src\\component\\footer.jsx",[],"C:\\Users\\ASUS\\Documents\\cowin\\cowin\\src\\component\\header.jsx",["66"],"import React, { Component } from \"react\";\r\nimport { Avatar, Image, Button, Menu, Dropdown} from 'antd';\r\nimport { PoweroffOutlined } from '@ant-design/icons';\r\n\r\nexport class Header extends Component {\r\n\r\n    render() {\r\n        const menu = (\r\n            <Menu >\r\n              <Button icon={<PoweroffOutlined />} > Logout</Button>\r\n            </Menu>\r\n          );\r\n\r\n        return (\r\n            <div>\r\n                <header className=\"head\">\r\n                    <a href=\"/\"><img className=\"logo_1\" src=\"img/cowin.png\" alt=\"logo\" width=\"150\"></img></a>\r\n                    <img className=\"logo_3\" src=\"img/national-emblem-login.svg\" alt=\"logo\" width=\"40\"></img>\r\n                    <div className=\"logo_2\">\r\n                    <Dropdown.Button overlay={menu} icon={<Avatar src={\"https://zos.alipayobjects.com/rmsportal/ODTLcjxAfvqbxHnVXCYX.png\"} />}>\r\n                         Welcome, Amit\r\n                    </Dropdown.Button>\r\n                    </div>\r\n                </header>\r\n\r\n            </div>\r\n        );\r\n    }\r\n}","C:\\Users\\ASUS\\Documents\\cowin\\cowin\\src\\component\\login.jsx",["67","68","69","70","71"],"import React, { Component } from \"react\";\r\nimport { Form, Input, Button, Checkbox, Carousel, Tag } from 'antd';\r\nimport { UserOutlined, LockOutlined } from '@ant-design/icons';\r\nimport { TwitterOutlined, YoutubeOutlined, FacebookOutlined, LinkedinOutlined} from '@ant-design/icons';\r\nimport { Spin, Space }  from 'antd';\r\n\r\nexport class Login extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n\r\n        }\r\n    }\r\n    onFinish = (values) => {\r\n        window.location=\"/home\";\r\n    };\r\n\r\n    render() {\r\n        const contentStyle = {\r\n            height: '300px',\r\n            color: 'red',\r\n            lineHeight: '300px',\r\n            textAlign: 'center',\r\n            background: '#364d79',\r\n        };\r\n       \r\n            return (\r\n            <div className=\"login_main\">\r\n                <div className=\"login_div\">\r\n                    <div className=\"login_container\">\r\n                        <div className=\"slider\">\r\n                            <div className=\"style\">\r\n                                <img _ngcontent-nry-c188=\"\" src=\"img/national-emblem-login.svg\" alt=\"logo\" class=\"national-logo-login\"></img>\r\n                                <img _ngcontent-nry-c188=\"\" src=\"img/cowin.png\" alt=\"logo\" class=\"welcome-logo\"></img>\r\n                                <Carousel autoplay >\r\n                                    <div>\r\n                                        <p _ngcontent-roj-c188=\"\">Together we will fight COVID-19.</p>\r\n                                        <img src=\"/img/covid.jpg\" width=\"450\" height=\"400\" style={contentStyle} />\r\n                                    </div>\r\n                                    <div>\r\n                                        <p _ngcontent-roj-c188=\"\">There is enough of everything, everyday for everyone.</p>\r\n                                        <img src=\"/img/covid19.jpg\" width=\"400\" height=\"400\" style={contentStyle} />\r\n                                    </div>\r\n                                    <div>\r\n                                        <p _ngcontent-roj-c188=\"\">Humanity needs leadership and solidarity to defeat the coronavirus.</p>\r\n                                        <img src=\"/img/cowin19.jpg\" width=\"400\" height=\"400\" style={contentStyle} />\r\n                                    </div>\r\n                                    <div>\r\n                                        <p _ngcontent-roj-c188=\"\">The guidelines of winning over the pandemic.</p>\r\n                                        <img src=\"/img/covin.jpg\" width=\"400\" height=\"400\" style={contentStyle} />\r\n                                    </div>\r\n                                </Carousel>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div className=\"login\">\r\n                            <Form\r\n                                name=\"normal_login\"\r\n                                className=\"login-form\"\r\n                                initialValues={{\r\n                                    remember: true,\r\n                                }}\r\n                                onFinish={this.onFinish}\r\n                            >\r\n                                <Form.Item\r\n                                    name=\"username\"\r\n                                    label=\"User Name:\"\r\n                                    rules={[\r\n                                        {\r\n                                            required: true,\r\n                                            message: 'Please input your Username!',\r\n                                        },\r\n                                    ]}\r\n                                >\r\n                                    <Input prefix={<UserOutlined className=\"site-form-item-icon\" />} placeholder=\"Username\" />\r\n                                </Form.Item>\r\n                                <Form.Item\r\n                                    name=\"password\"\r\n                                    label=\"Password:\"\r\n                                    rules={[\r\n                                        {\r\n                                            required: true,\r\n                                            message: 'Please input your Password!',\r\n                                        },\r\n                                    ]}\r\n                                >\r\n                                    <Input\r\n                                        prefix={<LockOutlined className=\"site-form-item-icon\" />}\r\n                                        type=\"password\"\r\n                                        placeholder=\"Password\"\r\n                                    />\r\n                                </Form.Item>\r\n                                <Form.Item>\r\n                                    <Form.Item name=\"remember\" valuePropName=\"checked\" noStyle>\r\n                                        <Checkbox>Remember me</Checkbox>\r\n                                    </Form.Item>\r\n\r\n                                    <a className=\"login-form-forgot\" href=\"\">\r\n                                        Forgot password\r\n                                    </a>\r\n                                </Form.Item>\r\n\r\n                                <Form.Item>\r\n                                    <Button type=\"primary\" htmlType=\"submit\" className=\"login-form-button\">\r\n                                        Log in\r\n                                    </Button>\r\n                                </Form.Item>\r\n                                <br />\r\n                            </Form>\r\n                            <div>\r\n                                <Space size=\"middle\">\r\n                                    <Spin size=\"large\" />\r\n                                </Space>,\r\n                            <br /><br /><br />\r\n                                <Tag icon={<TwitterOutlined />} color=\"#55acee\">\r\n                                    Twitter\r\n                            </Tag>\r\n                                <Tag icon={<YoutubeOutlined />} color=\"#cd201f\">\r\n                                    Youtube\r\n                            </Tag>\r\n                                <Tag icon={<FacebookOutlined />} color=\"#3b5999\">\r\n                                    Facebook\r\n                            </Tag>\r\n                                <Tag icon={<LinkedinOutlined />} color=\"#55acee\">\r\n                                    LinkedIn\r\n                            </Tag>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"center\">\r\n                        <div _ngcontent-roj-c172=\"\" class=\"row py-2\">\r\n                            <div _ngcontent-roj-c172=\"\" class=\"col-12 col-lg-auto\">\r\n                                <nav _ngcontent-roj-c172=\"\" class=\"nav justify-content-around text-white\">\r\n                                    <a _ngcontent-roj-c172=\"\" class=\"nav-link\" href=\"/contact\">Contact</a>\r\n                                    <span _ngcontent-roj-c172=\"\" class=\"py-2\"> | </span>\r\n                                    <a _ngcontent-roj-c172=\"\" class=\"nav-link\" href=\"/privacy\">Privacy Policy </a>\r\n                                    <span _ngcontent-roj-c172=\"\" class=\"py-2\"> | </span>\r\n                                    <a _ngcontent-roj-c172=\"\" class=\"nav-link\" href=\"/terms\">Terms</a>\r\n                                </nav>\r\n                            </div>\r\n                        </div>\r\n                        <div _ngcontent-roj-c172=\"\" class=\"col-auto col-sm-12 ml-md-auto col-lg-auto mx-auto mr-lg-0\">\r\n                            <div _ngcontent-roj-c172=\"\" class=\"row\">\r\n                                <div _ngcontent-roj-c172=\"\" class=\"col-12 col-sm-auto mx-md-auto ml-md-auto\">\r\n                                    <div _ngcontent-roj-c172=\"\" class=\"py-2 text-center text-sm-left view-text\"> Recommended Browser Google Chrome | Copyright © 2021 TAT. All Rights Reserved | Version 3.0.0</div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}","C:\\Users\\ASUS\\Documents\\cowin\\cowin\\src\\component\\registation.jsx",["72","73","74","75","76","77","78"],"C:\\Users\\ASUS\\Documents\\cowin\\cowin\\src\\component\\home.jsx",[],"C:\\Users\\ASUS\\Documents\\cowin\\cowin\\src\\component\\Home.jsx",["79","80","81"],"import react, { Component } from \"react\";\r\nimport { Table, Card, Modal, Button, Descriptions, List, Space } from 'antd';\r\nimport { Pie } from '@ant-design/charts';\r\nimport { RingProgress } from '@ant-design/charts';\r\nimport { Histogram } from '@ant-design/charts';\r\n\r\nvar dataHist = [\r\n    { value: 1.2 },\r\n    { value: 3.4 },\r\n    { value: 3.7 },\r\n    { value: 4.3 },\r\n    { value: 5.2 },\r\n    { value: 5.8 },\r\n    { value: 6.1 },\r\n    { value: 6.5 },\r\n    { value: 6.8 },\r\n    { value: 7.1 },\r\n    { value: 7.3 },\r\n    { value: 7.7 },\r\n    { value: 8.3 },\r\n    { value: 8.6 },\r\n    { value: 8.8 },\r\n    { value: 9.1 },\r\n    { value: 9.2 },\r\n    { value: 9.4 },\r\n    { value: 9.5 },\r\n    { value: 9.7 },\r\n    { value: 10.5 },\r\n    { value: 10.7 },\r\n    { value: 10.8 },\r\n    { value: 11 },\r\n    { value: 11 },\r\n    { value: 11.1 },\r\n    { value: 11.2 },\r\n    { value: 11.3 },\r\n    { value: 11.4 },\r\n    { value: 11.4 },\r\n    { value: 11.7 },\r\n    { value: 12 },\r\n    { value: 12.9 },\r\n    { value: 12.9 },\r\n    { value: 13.3 },\r\n    { value: 13.7 },\r\n    { value: 13.8 },\r\n    { value: 13.9 },\r\n    { value: 14 },\r\n    { value: 14.2 },\r\n    { value: 14.5 },\r\n    { value: 15 },\r\n    { value: 15.2 },\r\n    { value: 15.6 },\r\n    { value: 16 },\r\n    { value: 16.3 },\r\n    { value: 17.3 },\r\n    { value: 17.5 },\r\n    { value: 17.9 },\r\n    { value: 18 },\r\n    { value: 18 },\r\n    { value: 20.6 },\r\n    { value: 21 },\r\n    { value: 23.4 },\r\n  ];\r\n  var configHist = {\r\n    data: dataHist,\r\n    binField: 'value',\r\n    binWidth: 4,\r\n    tooltip: {\r\n      showMarkers: false,\r\n      position: 'top',\r\n    },\r\n    interactions: [{ type: 'element-highlight' }],\r\n    meta: {\r\n      range: {\r\n        min: 0,\r\n        tickInterval: 2,\r\n      },\r\n      count: {\r\n        max: 20,\r\n        nice: true,\r\n      },\r\n    },\r\n  };\r\n\r\nconst data = [\r\n    {\r\n      type: '0-5',\r\n      value: 10,\r\n    },\r\n    {\r\n      type: '5-10',\r\n      value: 25,\r\n    },\r\n    {\r\n      type: '10-18',\r\n      value: 18,\r\n    },\r\n    {\r\n      type: '19-40',\r\n      value: 11985,\r\n    },\r\n    {\r\n      type: '41-60',\r\n      value: 9000,\r\n    },\r\n    {\r\n      type: '61-70',\r\n      value: 5200,\r\n    },\r\n    {\r\n      type: '71+',\r\n      value: 5000,\r\n    },\r\n  ];\r\n\r\n  const config = {\r\n    appendPadding: 10,\r\n    data: data,\r\n    angleField: 'value',\r\n    colorField: 'type',\r\n    radius: 0.8,\r\n    label: {\r\n      type: 'spider',\r\n      labelHeight: 28,\r\n      content: '{percentage}',\r\n    },\r\n    interactions: [{ type: 'element-selected' }, { type: 'element-active' }],\r\n  };\r\n\r\n  const configRing = {\r\n    height: 250,\r\n    width: 250,\r\n    autoFit: false,\r\n    percent: 0.6,\r\n    color: ['#F4664A', '#E8EDF3'],\r\n    innerRadius: 0.85,\r\n    radius: 0.98,\r\n    statistic: {\r\n      title: {\r\n        style: {\r\n          color: '#363636',\r\n          fontSize: '12px',\r\n          lineHeight: '14px',\r\n        },\r\n        formatter: function formatter() {\r\n          return 'Vaccinated';\r\n        },\r\n      },\r\n    },\r\n  };\r\n\r\nexport class Home extends Component {\r\n    formRef = react.createRef();\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            loading: [],\r\n            patient: [],\r\n            patientData: [],\r\n            visible: false\r\n        }\r\n    }\r\n\r\n    setVisible = () =>{\r\n        this.setState({visible: false});\r\n    }\r\n    componentDidMount() {\r\n\r\n    fetch('http://localhost:9090/patient/getAll').then(res => res.json()).then((data) => {\r\n          console.log(data);\r\n          this.setState({ patient: data })\r\n        });\r\n        // this.showDetails = this.showDetails.bind(this);\r\n    };\r\n\r\n    showDetails = (value, event) => {\r\n        console.log(value);\r\n        fetch('http://localhost:9090/patient/find/'+value).then(res => res.json()).then((data) => {\r\n          console.log(data);\r\n          this.setState({ patientData: data, visible: true });\r\n        });\r\n    };\r\n\r\n    delete = (value, event) => {\r\n        console.log(value);\r\n        if(value.aadhar){\r\n            fetch('http://localhost:9090/patient/delete/'+value.aadhar).then(res => res.json()).then((data) => {\r\n                console.log(data);\r\n                this.setState({ patient: data })\r\n              });\r\n        }\r\n    };\r\n\r\n    columns = [\r\n        {\r\n            title: 'Aadhar No',\r\n            dataIndex: 'aadhar',\r\n            key: 'aadhar',\r\n            fixed: 'left',\r\n            width: 150,\r\n            render: text => <a onClick={this.showDetails.bind(this, text)}>{text}</a>,\r\n        },\r\n        {\r\n            title: 'Name',\r\n            dataIndex: 'name',\r\n            key: 'name',\r\n            fixed: 'left',\r\n            width: 150,\r\n        },\r\n        {\r\n            title: 'Blood Group',\r\n            dataIndex: 'blood_group',\r\n            key: 'blood_group',\r\n            fixed: 'left',\r\n            width: 100,\r\n        },\r\n        {\r\n            title: 'Gender',\r\n            dataIndex: 'gender',\r\n            key: 'gender',\r\n            width: 100,\r\n        },\r\n        {\r\n            title: 'Date Of Birth',\r\n            dataIndex: 'dob',\r\n            key: 'dob',\r\n            width: 150,\r\n        },\r\n        {\r\n            title: 'Marital',\r\n            dataIndex: 'marital',\r\n            key: 'marital',\r\n            width: 150,\r\n        },\r\n        {\r\n            title: 'Category',\r\n            dataIndex: 'category',\r\n            key: 'category',\r\n            width: 150,\r\n        },\r\n        {\r\n            title: 'Contact',\r\n            dataIndex: 'contact',\r\n            key: 'contact',\r\n            width: 150,\r\n        },\r\n        {\r\n            title: 'Email',\r\n            dataIndex: 'email',\r\n            key: 'email',\r\n            width: 150,\r\n        },\r\n        {\r\n            title: 'Address',\r\n            dataIndex: 'address',\r\n            key: 'address',\r\n            width: 250,\r\n        },\r\n        {\r\n            title: 'Emergency Contact No',\r\n            dataIndex: 'contact_no',\r\n            key: 'contact_no',\r\n            width: 150,\r\n        },\r\n        {\r\n            title: 'Emergency Email ID',\r\n            dataIndex: 'email_id',\r\n            key: 'email_id',\r\n            width: 150,\r\n        },\r\n        {\r\n            title: 'Emergency Address',\r\n            dataIndex: 'e_address',\r\n            key: 'e_address',\r\n            width: 250,\r\n        },\r\n        {\r\n            title: 'Insurance No',\r\n            dataIndex: 'insurance_no',\r\n            key: 'insurance_no',\r\n            width: 150,\r\n        },\r\n        {\r\n            title: 'Insurance Provider',\r\n            dataIndex: 'insurance_pro',\r\n            key: 'insurance_pro',\r\n            width: 150,\r\n        },\r\n        {\r\n            title: 'Action',\r\n            key: 'action',\r\n            fixed: 'right',\r\n            width: 150,\r\n            render: (text, record) => (\r\n              <Space size=\"middle\">\r\n                <a onClick={this.delete.bind(this, text)}>Delete</a>\r\n              </Space>\r\n            ),\r\n          },\r\n    ];\r\n\r\n    contentStyle = {\r\n        height: '160px',\r\n        color: '#fff',\r\n        lineHeight: '160px',\r\n        textAlign: 'center',\r\n        background: '#364d79',\r\n      };\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"home_container\">\r\n                \r\n                <Card bordered={true}>\r\n                    <div className=\"charts\">\r\n                        <div className=\"ring\">\r\n                            <RingProgress {...configRing} />\r\n                        </div>\r\n                        <div className=\"pie\">\r\n                            <Pie {...config} />\r\n                        </div>\r\n                    </div>\r\n                    <div >\r\n                        <Histogram {...configHist} />\r\n                    </div>\r\n                </Card>\r\n\r\n\r\n                <Card title=\"Patient Information\" bordered={true}>\r\n                    <Table scroll={{ x: 1500 }} sticky columns={this.columns} dataSource={this.state.patient}/>  \r\n                </Card>\r\n                <Modal title=\"Patient Madical History\" width={1000} visible={this.state.visible} onOk={this.setVisible} onCancel={this.setVisible}>\r\n                    <Descriptions title=\"Madical History\">\r\n                        <Descriptions.Item label=\"Name\">{this.state.patientData.name}</Descriptions.Item>\r\n                        <Descriptions.Item label=\"Aadhar Number\">{this.state.patientData.aadhar}</Descriptions.Item>\r\n                        <Descriptions.Item label=\"Blood Group\">{this.state.patientData.blood_group}</Descriptions.Item>\r\n                        <Descriptions.Item label=\"Date of birth\">{this.state.patientData.dob}</Descriptions.Item>\r\n                        <Descriptions.Item label=\"Gender\">{this.state.patientData.gender}</Descriptions.Item>\r\n                    </Descriptions>\r\n                    <List\r\n                        itemLayout=\"horizontal\"\r\n                        dataSource={this.state.patientData.history}\r\n                        renderItem={(i) => (\r\n                            <List.Item>\r\n                                <List.Item.Meta title={i.title} />\r\n                                <List.Item.Meta title={i.value} />\r\n                                <List.Item.Meta title={i.details} />\r\n                            </List.Item>\r\n                        )}\r\n                    />\r\n                </Modal>\r\n            </div>\r\n      );\r\n    }\r\n}","C:\\Users\\ASUS\\Documents\\cowin\\cowin\\src\\component\\Registation.jsx",["82","83","84","85","86","87"],"import react, { Component } from \"react\";\r\nimport { UserOutlined, MobileOutlined, MailOutlined, IdcardOutlined, HeartOutlined } from '@ant-design/icons';\r\nimport { TwitterOutlined, YoutubeOutlined, FacebookOutlined, LinkedinOutlined } from '@ant-design/icons';\r\nimport { Input } from 'antd';\r\nimport { Radio, Button } from 'antd';\r\nimport { DatePicker } from 'antd';\r\nimport { Select } from 'antd';\r\nimport { Form, message, Row, Col, Upload, Card, List, Tag } from 'antd';\r\n\r\nconst { TextArea } = Input;\r\nconst { RangePicker } = DatePicker;\r\n\r\n\r\nfunction onChange(value, dateString) {\r\n    console.log('Selected Time: ', value);\r\n    console.log('Formatted Selected Time: ', dateString);\r\n}\r\nfunction onOk(value) {\r\n    console.log('onOk: ', value);\r\n}\r\nconst { Option } = Select;\r\nconst layout = {\r\n    labelCol: { span: 8 },\r\n    wrapperCol: { span: 16 },\r\n};\r\nconst tailLayout = {\r\n    wrapperCol: { offset: 8, span: 16 },\r\n};\r\n\r\nfunction onBlur() {\r\n    console.log('blur');\r\n}\r\n\r\nfunction onFocus() {\r\n    console.log('focus');\r\n}\r\n\r\nfunction onSearch(val) {\r\n    console.log('search:', val);\r\n}\r\n\r\n\r\n\r\nexport class Registation extends Component {\r\n    formRef = react.createRef();\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            loading: [],\r\n            patient: [],\r\n            medical_hist: {\r\n                1 : {\r\n                    patientKey: {\r\n                        sequence: 1,\r\n                        aadhar: ''\r\n                    },\r\n                    title: 'Epilepsy, fits, blackouts, fainting turns or unexplained loss of consciousness?',\r\n                    value: '',\r\n                    details: '',\r\n                },\r\n                2 : {\r\n                    patientKey: {\r\n                        sequence: 2,\r\n                        aadhar: ''\r\n                    },\r\n                    title: 'Vertigo, dizziness, giddiness, problems with balance?',\r\n                    value: '',\r\n                    details: ''\r\n                },\r\n                3 : {\r\n                    patientKey: {\r\n                        sequence: 3,\r\n                        aadhar: ''\r\n                    },\r\n                    title: 'Recurrent headache or migraine?',\r\n                    value: '',\r\n                    details: ''\r\n                },\r\n                4 : {\r\n                    patientKey: {\r\n                        sequence: 4,\r\n                        aadhar: ''\r\n                    },\r\n                    title: 'Diseases of the nervous system e.g. neuritis, stroke, multiple sclerosis?',\r\n                    value: '',\r\n                    details: ''\r\n                },\r\n                5 : {\r\n                    patientKey: {\r\n                        sequence: 5,\r\n                        aadhar: ''\r\n                    },\r\n                    title: 'Chest pain, angina, heart disease or breathlessness?',\r\n                    value: '',\r\n                    details: ''\r\n                },\r\n                6 : {\r\n                    patientKey: {\r\n                        sequence: 6,\r\n                        aadhar: ''\r\n                    },\r\n                    title: 'Any visual defect e.g. scotoma, blindness in one eye, reduced visual field, blurred vision, coloured blind?',\r\n                    value: '',\r\n                    details: ''\r\n                },\r\n                7 : {\r\n                    patientKey: {\r\n                        sequence: 7,\r\n                        aadhar: ''\r\n                    },\r\n                    title: 'Raised or low blood pressure?',\r\n                    value: '',\r\n                    details: ''\r\n                },\r\n                8 : {\r\n                    patientKey: {\r\n                        sequence: 8,\r\n                        aadhar: ''\r\n                    },\r\n                    title: 'Any blood disorder?',\r\n                    value: '',\r\n                    details: ''\r\n                },\r\n                9 : {\r\n                    patientKey: {\r\n                        sequence: 9,\r\n                        aadhar: ''\r\n                    },\r\n                    title: 'Asthma, bronchitis, emphysema, pneumonia or any other lung disease?',\r\n                    value: '',\r\n                    details: ''\r\n                },\r\n                10 : {\r\n                    patientKey: {\r\n                        sequence: 10,\r\n                        aadhar: ''\r\n                    },\r\n                    title: 'Jaundice or any form of hepatitis or other liver problem?',\r\n                    value: '',\r\n                    details: ''\r\n                },\r\n                11 : {\r\n                    patientKey: {\r\n                        sequence: 11,\r\n                        aadhar: ''\r\n                    },\r\n                    title: 'Any kidney or bladder conditions?',\r\n                    value: '',\r\n                    details: ''\r\n                },\r\n                12 : {\r\n                    patientKey: {\r\n                        sequence: 12,\r\n                        aadhar: ''\r\n                    },\r\n                    title: 'Arthritis, gout, chondromalcia patellae or rheumatism?',\r\n                    value: '',\r\n                    details: ''\r\n                },\r\n                13 : {\r\n                    patientKey: {\r\n                        sequence: 13,\r\n                        aadhar: ''\r\n                    },\r\n                    title: 'Any metabolic disorder including diabetes, thyroid and adrenal gland disease?',\r\n                    value: '',\r\n                    details: ''\r\n                },\r\n                14 : {\r\n                    patientKey: {\r\n                        sequence: 14,\r\n                        aadhar: ''\r\n                    },\r\n                    title: 'Psoriasis, eczema, allergic skin rash or other skin disorder?',\r\n                    value: '',\r\n                    details: ''\r\n                },\r\n                15 : {\r\n                    patientKey: {\r\n                        sequence: 15,\r\n                        aadhar: ''\r\n                    },\r\n                    title: 'Any infectious diseases?',\r\n                    value: '',\r\n                    details: ''\r\n                },\r\n                16 : {\r\n                    patientKey: {\r\n                        sequence: 16,\r\n                        aadhar: ''\r\n                    },\r\n                    title: 'Anxiety/depression, mental breakdown or stress related problems?',\r\n                    value: '',\r\n                    details: ''\r\n                },\r\n                17 : {\r\n                    patientKey: {\r\n                        sequence: 17,\r\n                        aadhar: ''\r\n                    },\r\n                    title: 'Sleep related issues?',\r\n                    value: '',\r\n                    details: ''\r\n                },\r\n                18 : {\r\n                    patientKey: {\r\n                        sequence: 18,\r\n                        aadhar: ''\r\n                    },\r\n                    title: 'Substance misuse (e.g. drugs, steroids)?',\r\n                    value: '',\r\n                    details: ''\r\n                },\r\n                19 : {\r\n                    patientKey: {\r\n                        sequence: 19,\r\n                        aadhar: ''\r\n                    },\r\n                    title: 'Any malignancies or cancers?',\r\n                    value: '',\r\n                    details: ''\r\n                },\r\n                20 : {\r\n                    patientKey: {\r\n                        sequence: 20,\r\n                        aadhar: ''\r\n                    },\r\n                    title: 'Any operations or surgical procedures?',\r\n                    value: '',\r\n                    details: ''\r\n                },\r\n                21 : {\r\n                    patientKey: {\r\n                        sequence: 21,\r\n                        aadhar: ''\r\n                    },\r\n                    title: 'Ear or hearing problems?',\r\n                    value: '',\r\n                    details: ''\r\n                },\r\n                22 : {\r\n                    patientKey: {\r\n                        sequence: 22,\r\n                        aadhar: ''\r\n                    },\r\n                    title: 'Have you ever consulted an orthopaedic surgeon, chiropractor, osteopath or physiotherapist?',\r\n                    value: '',\r\n                    details: ''\r\n                },\r\n                23 : {\r\n                    patientKey: {\r\n                        sequence: 23,\r\n                        aadhar: ''\r\n                    },\r\n                    title: 'Current treatment. Are you currently attending a hospital/GP for treatment or waiting for an appointment?',\r\n                    value: '',\r\n                    details: ''\r\n                },\r\n                24 : {\r\n                    patientKey: {\r\n                        sequence: 24,\r\n                        aadhar: ''\r\n                    },\r\n                    title: 'Any other medical condition we should be aware of?',\r\n                    value: '',\r\n                    details: ''\r\n                },\r\n                25 : {\r\n                    patientKey: {\r\n                        sequence: 25,\r\n                        aadhar: ''\r\n                    },\r\n                    title: 'Allergies: Do you have any known allergies or do you have any adverse reaction to drugs or medication?',\r\n                    value: '',\r\n                    details: ''\r\n                },\r\n                26 : {\r\n                    patientKey: {\r\n                        sequence: 26,\r\n                        aadhar: ''\r\n                    },\r\n                    title: 'Do you currently take any medication?',\r\n                    value: '',\r\n                    details: ''\r\n                },\r\n                27 : {\r\n                    patientKey: {\r\n                        sequence: 27,\r\n                        aadhar: ''\r\n                    },\r\n                    title: 'Ear or hearing problems?',\r\n                    value: '',\r\n                    details: ''\r\n                },\r\n            }\r\n        }\r\n    }\r\n\r\n    onFinish = (data) => {\r\n        data.dob = data.dob.format('YYYY-MM-DD')\r\n        let history = [];\r\n        let aadhar = data.aadhar;\r\n        Object.keys(this.state.medical_hist).map( k=>{\r\n            let item = this.state.medical_hist[k];\r\n            item.patientKey['aadhar'] = aadhar;\r\n            history.push(item);\r\n        });\r\n        data['history'] = history\r\n        console.log(data);\r\n        fetch('http://localhost:9090/patient/save', {\r\n            method: 'post',\r\n            headers: {\r\n                'Accept': 'application/form-data',\r\n                'Content-Type': 'application/json',\r\n            },\r\n            body: JSON.stringify(data),\r\n        }).then((responce) => {\r\n                if (responce.status === 200) {\r\n                    message.success('Data Saved Successfully');\r\n                    this.formRef.current.resetFields();\r\n                } else {\r\n                    message.error('Data Saving Failed');\r\n                }\r\n            }\r\n        );\r\n    };\r\n\r\n    onReset = () => {\r\n        this.formRef.current.resetFields();\r\n    };\r\n\r\n    enterLoading = index => {\r\n        this.setState(({ loading }) => {\r\n            const newLoading = [...loading];\r\n            newLoading[index] = true;\r\n\r\n            return {\r\n                loading: newLoading,\r\n            };\r\n        });\r\n    }\r\n\r\n    medicalHistory = (k, type) => event => {\r\n        let history = this.state.medical_hist;\r\n        if(type === 'answer'){\r\n            history[k].value = event.target.value;\r\n        }else{\r\n            history[k].details = event.target.value;\r\n        }\r\n        this.setState({medical_hist:history});\r\n    };\r\n\r\n    componentDidMount(){\r\n        console.log(this.props.patientData);\r\n        if(this.props.patientData){\r\n            this.formRef.current.setFieldsValue({\r\n                name: this.props.patientData.name,\r\n                aadhar: this.props.patientData.aadhar,\r\n                address: this.props.patientData.address,\r\n                blood_group: this.props.patientData.blood_group,\r\n                category: this.props.patientData.category,\r\n                contact: this.props.patientData.contact,\r\n                contact_no: this.props.patientData.contact_no,\r\n                // dob: this.props.patientData.dob,\r\n                e_address: this.props.patientData.e_address,\r\n                email: this.props.patientData.email,\r\n                email_id: this.props.patientData.email_id,\r\n                gender: this.props.patientData.gender,\r\n                insurance_no: this.props.patientData.insurance_no,\r\n                insurance_pro: this.props.patientData.insurance_pro,\r\n                marital: this.props.patientData.marital,\r\n              });\r\n              let history = this.state.medical_hist;\r\n              this.props.patientData.history.map((item, i)=>{\r\n                history[i+1]=item;\r\n              });\r\n              this.setState({medical_hist: history});\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const config = {\r\n            rules: [\r\n                {\r\n                    type: 'object',\r\n                    required: true,\r\n                    message: 'Please select time!',\r\n                },\r\n            ],\r\n        };\r\n\r\n        \r\n        return (\r\n\r\n            <div className=\"home_container\"><br></br>\r\n                <Form {...layout} ref={this.formRef} name=\"control-ref\" onFinish={this.onFinish}>\r\n                    <Card title=\"1. Patient Information\" bordered={true}>\r\n                        <Row gutter={24}>\r\n                            <Col span={10} >\r\n                                <Form.Item name=\"name\" label=\"Name\">\r\n                                    <Input placeholder=\"Name of the Person\" prefix={<UserOutlined />} />\r\n                                </Form.Item>\r\n                            </Col>\r\n                            <Col span={10} >\r\n                                <Form.Item name=\"aadhar\" label=\"Aadhar No:\" rules={[{ required: true }]}>\r\n                                    <Input placeholder=\"Aadhar No\" />\r\n                                </Form.Item>\r\n                            </Col>\r\n                        </Row>\r\n\r\n                        <Row gutter={24}>\r\n                            <Col span={10}>\r\n                                <Form.Item name=\"blood_group\" label=\"Blood Group:\" >\r\n                                    <Input placeholder=\"Blood Group\" prefix={<HeartOutlined />} />\r\n                                </Form.Item>\r\n                            </Col>\r\n                            <Col span={10}>\r\n                                <Form.Item name=\"gender\" label=\"Select Gender:\" >\r\n                                    <Radio.Group name=\"radiogroup\">\r\n                                        <Radio value='male'>Male</Radio>\r\n                                        <Radio value='female'>Female</Radio>\r\n                                    </Radio.Group>\r\n                                </Form.Item>\r\n                            </Col>\r\n                        </Row>\r\n\r\n                        <Row gutter={24}>\r\n                            <Col span={10}>\r\n                                <Form.Item label=\"Date Of Birth: \" name=\"dob\" {...config}>\r\n                                    <DatePicker />\r\n                                </Form.Item>\r\n                            </Col>\r\n                            <Col span={10}>\r\n                                <Form.Item name=\"marital\" label=\"Marital Status:\">\r\n                                    <Select\r\n                                        showSearch\r\n                                        style={{ width: 200 }}\r\n                                        placeholder=\"Marital Status\"\r\n                                        optionFilterProp=\"children\"\r\n                                        onChange={onChange}\r\n                                        onFocus={onFocus}\r\n                                        onBlur={onBlur}\r\n                                        onSearch={onSearch}\r\n                                        filterOption={(input, option) =>\r\n                                            option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0\r\n                                        }\r\n                                    >\r\n                                        <Option value=\"Single\">Single</Option>\r\n                                        <Option value=\"Married\">Married</Option>\r\n                                        <Option value=\"Separated\">Separated</Option>\r\n                                        <Option value=\"Divorced\">Divorced</Option>\r\n                                        <Option value=\"Other\">Other</Option>\r\n                                    </Select>\r\n                                </Form.Item>\r\n                            </Col>\r\n\r\n                            <Col span={10}>\r\n                                <Form.Item name=\"category\" label=\"Category:\" >\r\n                                    <Select\r\n                                        showSearch\r\n                                        style={{ width: 200 }}\r\n                                        placeholder=\"Category\"\r\n                                        optionFilterProp=\"children\"\r\n                                        onChange={onChange}\r\n                                        onFocus={onFocus}\r\n                                        onBlur={onBlur}\r\n                                        onSearch={onSearch}\r\n                                        filterOption={(input, option) =>\r\n                                            option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0\r\n                                        }\r\n                                    >\r\n                                        <Option value=\"General\">General</Option>\r\n                                        <Option value=\"OBC\">OBC</Option>\r\n                                        <Option value=\"SC/ST\">SC/ST</Option>\r\n                                        <Option value=\"Other\">Other</Option>\r\n                                    </Select>\r\n                                </Form.Item>\r\n                            </Col>\r\n                        </Row>\r\n                    </Card>\r\n\r\n                    <Card title=\"2. Patient Address and Contact Information\" bordered={true}>\r\n                        <Row gutter={24}>\r\n                            <Col span={10} >\r\n                                <Form.Item name=\"contact\" label=\"Contact Number:\" >\r\n                                    <Input placeholder=\"Enter Contact Number\" prefix={<MobileOutlined />} />\r\n                                </Form.Item>\r\n                            </Col>\r\n                            <Col span={10} >\r\n                                <Form.Item name=\"email\" label=\"Email ID:\" >\r\n                                    <Input placeholder=\"Enter Email ID\" prefix={<MailOutlined />} />\r\n                                </Form.Item>\r\n                            </Col>\r\n                        </Row>\r\n\r\n                        <Row gutter={24}>\r\n                            <Col span={10} >\r\n                                <Form.Item name=\"address\" label=\"Enter Adress:\" >\r\n                                    <Input size=\"large\" prefix={<IdcardOutlined />} />\r\n                                </Form.Item>\r\n                            </Col>\r\n                            {/* <Col span={10} >\r\n                                <Form.Item label=\"Photo\" name=\"photo\" rules={[{ required: true }]}>\r\n                                    <Upload >\r\n                                        <Button icon={<UploadOutlined />}>Upload Photo</Button>\r\n                                    </Upload>\r\n                                </Form.Item>\r\n                            </Col> */}\r\n                        </Row>\r\n                    </Card>\r\n\r\n                    <Card title=\"3. Emergency Contact/Next of Kin Information\" bordered={true}>\r\n                        <Row gutter={24}>\r\n                            <Col span={10} >\r\n                                <Form.Item name=\"contact_no\" label=\"Contact Number:\" >\r\n                                    <Input placeholder=\"Enter Contact Number\" prefix={<MobileOutlined />} />\r\n                                </Form.Item>\r\n                            </Col>\r\n                            <Col span={10} >\r\n                                <Form.Item name=\"email_id\" label=\"Email ID:\" >\r\n                                    <Input placeholder=\"Enter Email ID\" prefix={<MailOutlined />} />\r\n                                </Form.Item>\r\n                            </Col>\r\n                        </Row>\r\n\r\n                        <Row gutter={24}>\r\n                            <Col span={10} >\r\n                                <Form.Item name=\"e_address\" label=\"Enter Adress:\">\r\n                                    <Input size=\"large\" prefix={<IdcardOutlined />} />\r\n                                </Form.Item>\r\n                            </Col>\r\n                        </Row>\r\n                    </Card>\r\n\r\n                    <Card title=\"4. Private Medical Insurance and Current Employer Information (The Patient is responsible for making all claims with their insurer)\" bordered={true}>\r\n                        <Row gutter={24}>\r\n                            <Col span={10} >\r\n                                <Form.Item name=\"insurance_no\" label=\"Insurance Number:\" >\r\n                                    <Input placeholder=\"Enter Insurance Number\" prefix={<MobileOutlined />} />\r\n                                </Form.Item>\r\n                            </Col>\r\n                            <Col span={10} >\r\n                                <Form.Item name=\"insurance_pro\" label=\"Insurance Provider:\" >\r\n                                    <Input size=\"large\" placeholder=\"Enter Insurance Provider\" prefix={<IdcardOutlined />} />\r\n                                </Form.Item>\r\n                            </Col>\r\n                        </Row>\r\n                    </Card>\r\n\r\n                    <Card title=\"5. Patient Summary Medical History\" bordered={true}>\r\n                        <Row gutter={24}>\r\n                            <Col span={20} style={{ 'textAlign': 'left' }}>\r\n                                <List\r\n                                    itemLayout=\"horizontal\"\r\n                                    dataSource={Object.keys(this.state.medical_hist)}\r\n                                    renderItem={(k, i) => (\r\n                                        <List.Item \r\n                                            actions={[\r\n                                                <Radio.Group value={this.state.medical_hist[k].value} name=\"radiogroup\" onChange={this.medicalHistory(k, 'answer')}>\r\n                                                    <Radio value='yes'>Yes</Radio>\r\n                                                    <Radio value='no'>No</Radio>\r\n                                                </Radio.Group>,\r\n                                                <Input value={this.state.medical_hist[k].details} onChange={this.medicalHistory(k, 'details')} size=\"large\" style={{ width: '400px' }} placeholder=\"If answered ‘yes’ please give details.\" />]\r\n                                            }>\r\n                                            <List.Item.Meta title={this.state.medical_hist[k].title} />\r\n                                        </List.Item>\r\n                                    )}\r\n                                />\r\n                            </Col>\r\n                        </Row>\r\n                    </Card>\r\n\r\n                    <Row gutter={24}>\r\n                        <Col span={17} >\r\n                            <Form.Item {...tailLayout}>\r\n                                <Button type=\"primary\" htmlType=\"submit\">\r\n                                    Submit\r\n                                </Button>\r\n                                <Button htmlType=\"button\" onClick={this.onReset}>\r\n                                    Reset\r\n                                </Button>\r\n                            </Form.Item>\r\n                        </Col>\r\n                    </Row>\r\n                    <Tag icon={<TwitterOutlined />} color=\"#55acee\"></Tag>\r\n                    <Tag icon={<YoutubeOutlined />} color=\"#cd201f\"></Tag>\r\n                    <Tag icon={<FacebookOutlined />} color=\"#3b5999\"></Tag>\r\n                    <Tag icon={<LinkedinOutlined />} color=\"#55acee\"></Tag>\r\n\r\n                </Form>\r\n\r\n            </div>\r\n        );\r\n    }\r\n}","C:\\Users\\ASUS\\Documents\\cowin\\cowin\\src\\component\\Tab.jsx",[],"C:\\Users\\ASUS\\Documents\\cowin\\cowin\\src\\layout\\layout.jsx",[],"C:\\Users\\ASUS\\Documents\\cowin\\cowin\\src\\component\\PatientSearch.jsx",["88","89","90","91","92"],"import react, { Component } from \"react\";\r\nimport { Table, Card, Modal, Button, Descriptions, List, Input, Space } from 'antd';\r\nimport { AudioOutlined } from '@ant-design/icons';\r\nimport { Registation } from './Registation';\r\n\r\nconst suffix = (\r\n    <AudioOutlined\r\n      style={{\r\n        fontSize: 16,\r\n        color: '#1890ff',\r\n      }}\r\n    />\r\n  );\r\n  const { Search } = Input;\r\n\r\nexport class PatientSearch extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            patientData:null,\r\n            dataShow: false,\r\n            formShow: false\r\n        }\r\n    }\r\n\r\n    onSearch = value => {\r\n        console.log(value);\r\n        fetch('http://localhost:9090/patient/find/'+value).then(res => res.json()).then((data) => {\r\n            console.log(data);\r\n            this.setState({ \r\n                patientData: data,\r\n                dataShow: true,\r\n                formShow: false\r\n            });\r\n        });\r\n    };\r\n\r\n    edit = val => {\r\n        this.setState({ \r\n            formShow: true,\r\n            dataShow: false\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <div className=\"home_container\">\r\n                <Card title=\"Patient Search\" bordered={true}>\r\n                    <Space direction=\"vertical\">\r\n                        <Search\r\n                            placeholder=\"Aadhar No.\"\r\n                            enterButton=\"Search\"\r\n                            size=\"large\"\r\n                            suffix={suffix}\r\n                            onSearch={this.onSearch}\r\n                            />\r\n                        </Space>\r\n                </Card>\r\n\r\n                {this.state.dataShow ? \r\n                    <Card title={<div className=\"display\"><div className=\"cardTitle\">Patient Details</div> <div className=\"edit\"><a onClick={this.edit}>Edit</a></div></div>} bordered={true}>\r\n                        <Descriptions title=\"Madical History\">\r\n                            <Descriptions.Item label=\"Name\">{this.state.patientData.name}</Descriptions.Item>\r\n                            <Descriptions.Item label=\"Aadhar Number\">{this.state.patientData.aadhar}</Descriptions.Item>\r\n                            <Descriptions.Item label=\"Blood Group\">{this.state.patientData.blood_group}</Descriptions.Item>\r\n                            <Descriptions.Item label=\"Date of birth\">{this.state.patientData.dob}</Descriptions.Item>\r\n                            <Descriptions.Item label=\"Gender\">{this.state.patientData.gender}</Descriptions.Item>\r\n                        </Descriptions>\r\n                        <List\r\n                            itemLayout=\"horizontal\"\r\n                            dataSource={this.state.patientData.history}\r\n                            renderItem={(i) => (\r\n                                <List.Item>\r\n                                    <List.Item.Meta className=\"item_tittle\" title={i.title} />\r\n                                    <List.Item.Meta className=\"item_value\" title={i.value} />\r\n                                    <List.Item.Meta className=\"item_details\" title={i.details} />\r\n                                </List.Item>\r\n                            )}\r\n                        />\r\n                    </Card>\r\n                : \"\"}\r\n\r\n                {this.state.formShow ? \r\n                    <Registation patientData={this.state.patientData}/>\r\n                : \"\"}\r\n            </div>\r\n        );\r\n    }\r\n\r\n}",["93","94"],{"ruleId":"95","replacedBy":"96"},{"ruleId":"97","replacedBy":"98"},{"ruleId":"99","severity":1,"message":"100","line":4,"column":10,"nodeType":"101","messageId":"102","endLine":4,"endColumn":13},{"ruleId":"99","severity":1,"message":"103","line":6,"column":8,"nodeType":"101","messageId":"102","endLine":6,"endColumn":14},{"ruleId":"99","severity":1,"message":"104","line":2,"column":18,"nodeType":"101","messageId":"102","endLine":2,"endColumn":23},{"ruleId":"105","severity":1,"message":"106","line":39,"column":41,"nodeType":"107","endLine":39,"endColumn":115},{"ruleId":"105","severity":1,"message":"106","line":43,"column":41,"nodeType":"107","endLine":43,"endColumn":117},{"ruleId":"105","severity":1,"message":"106","line":47,"column":41,"nodeType":"107","endLine":47,"endColumn":117},{"ruleId":"105","severity":1,"message":"106","line":51,"column":41,"nodeType":"107","endLine":51,"endColumn":115},{"ruleId":"108","severity":1,"message":"109","line":99,"column":37,"nodeType":"107","endLine":99,"endColumn":78},{"ruleId":"99","severity":1,"message":"110","line":2,"column":85,"nodeType":"101","messageId":"102","endLine":2,"endColumn":99},{"ruleId":"99","severity":1,"message":"111","line":7,"column":35,"nodeType":"101","messageId":"102","endLine":7,"endColumn":41},{"ruleId":"99","severity":1,"message":"112","line":7,"column":49,"nodeType":"101","messageId":"102","endLine":7,"endColumn":53},{"ruleId":"99","severity":1,"message":"113","line":9,"column":9,"nodeType":"101","messageId":"102","endLine":9,"endColumn":17},{"ruleId":"99","severity":1,"message":"114","line":10,"column":9,"nodeType":"101","messageId":"102","endLine":10,"endColumn":20},{"ruleId":"99","severity":1,"message":"115","line":17,"column":10,"nodeType":"101","messageId":"102","endLine":17,"endColumn":14},{"ruleId":"99","severity":1,"message":"116","line":104,"column":15,"nodeType":"101","messageId":"102","endLine":104,"endColumn":19},{"ruleId":"99","severity":1,"message":"117","line":2,"column":30,"nodeType":"101","messageId":"102","endLine":2,"endColumn":36},{"ruleId":"108","severity":1,"message":"118","line":201,"column":29,"nodeType":"107","endLine":201,"endColumn":76},{"ruleId":"108","severity":1,"message":"118","line":296,"column":17,"nodeType":"107","endLine":296,"endColumn":59},{"ruleId":"99","severity":1,"message":"111","line":8,"column":35,"nodeType":"101","messageId":"102","endLine":8,"endColumn":41},{"ruleId":"99","severity":1,"message":"113","line":10,"column":9,"nodeType":"101","messageId":"102","endLine":10,"endColumn":17},{"ruleId":"99","severity":1,"message":"114","line":11,"column":9,"nodeType":"101","messageId":"102","endLine":11,"endColumn":20},{"ruleId":"99","severity":1,"message":"115","line":18,"column":10,"nodeType":"101","messageId":"102","endLine":18,"endColumn":14},{"ruleId":"119","severity":1,"message":"120","line":304,"column":52,"nodeType":"121","messageId":"122","endLine":304,"endColumn":54},{"ruleId":"119","severity":1,"message":"120","line":375,"column":59,"nodeType":"121","messageId":"122","endLine":375,"endColumn":61},{"ruleId":"99","severity":1,"message":"123","line":1,"column":8,"nodeType":"101","messageId":"102","endLine":1,"endColumn":13},{"ruleId":"99","severity":1,"message":"124","line":2,"column":10,"nodeType":"101","messageId":"102","endLine":2,"endColumn":15},{"ruleId":"99","severity":1,"message":"125","line":2,"column":23,"nodeType":"101","messageId":"102","endLine":2,"endColumn":28},{"ruleId":"99","severity":1,"message":"117","line":2,"column":30,"nodeType":"101","messageId":"102","endLine":2,"endColumn":36},{"ruleId":"108","severity":1,"message":"118","line":62,"column":130,"nodeType":"107","endLine":62,"endColumn":153},{"ruleId":"95","replacedBy":"126"},{"ruleId":"97","replacedBy":"127"},"no-native-reassign",["128"],"no-negated-in-lhs",["129"],"no-unused-vars","'Tab' is defined but never used.","Identifier","unusedVar","'Layout' is defined but never used.","'Image' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","'UploadOutlined' is defined but never used.","'Upload' is defined but never used.","'List' is defined but never used.","'TextArea' is assigned a value but never used.","'RangePicker' is assigned a value but never used.","'onOk' is defined but never used.","'data' is assigned a value but never used.","'Button' is defined but never used.","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","'react' is defined but never used.","'Table' is defined but never used.","'Modal' is defined but never used.",["128"],["129"],"no-global-assign","no-unsafe-negation"]